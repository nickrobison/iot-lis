# java.util.Date implementation
scalar Date

type DeviceType {
  internalId: ID
  name: String
  manufacturer: String
  model: String
  loincCode: String
}
type Patient {
  internalId: ID
  lookupId: String
  firstName: String
  middleName: String
  lastName: String
  suffix: String
  race: String
  birthDate: String
  gender: String
  ethnicity: String
  street: String
  streetTwo: String
  city: String
  county: String
  state: String
  zipCode: String
  telephone: String
  email: String
  role: String
  residentCongregateSetting: Boolean
  employedInHealthcare: Boolean
  testResults: [TestOrder]
}
type Facility {
  name: String
  cliaNumber: String
  street: String
  streetTwo: String
  city: String
  county: String
  state: String
  zipCode: String
  phone: String
}
type Provider {
  firstName: String
  middleName: String
  lastName: String
  suffix: String
  NPI: String
  street: String
  streetTwo: String
  city: String
  county: String
  state: String
  zipCode: String
  phone: String
}
type Organization {
  internalId: ID
  testingFacility: Facility
  orderingProvider: Provider
  deviceTypes: [DeviceType]
  defaultDeviceType: DeviceType
}
# TestResult and TestOrder should have the same properties
type TestOrder {
  internalId: ID
  patient: Patient
  organization: Organization
  dateAdded: String
  pregnancy: String
  noSymptoms: Boolean
  symptoms: String
  symptomOnset: String
  firstTest: Boolean
  priorTestDate: String
  priorTestType: String
  priorTestResult: String
  deviceType: DeviceType
  result: String
  dateTested: String
}
type TestResult {
  internalId: ID
  patient: Patient
  organization: Organization
  dateAdded: String
  pregnancy: String
  noSymptoms: Boolean
  symptoms: String
  symptomOnset: String
  firstTest: Boolean
  priorTestDate: String
  priorTestType: String
  priorTestResult: String
  deviceType: DeviceType
  result: String
  dateTested: Date
}

type User {
  id: ID
  firstName: String
  middleName: String
  lastName: String
  suffix: String
  organization: Organization
}

type Query {
  deviceType: [DeviceType]
  patients: [Patient]
  patient(id: String!): Patient
  organization: Organization
  queue: [TestOrder]
  testResults: [TestResult]
  whoami: User!
}
type Mutation {
  updateOrganization(
    testingFacilityName: String!
    cliaNumber: String
    orderingProviderFirstName: String!
    orderingProviderMiddleName: String
    orderingProviderLastName: String!
    orderingProviderSuffix: String
    orderingProviderNPI: String!
    orderingProviderStreet: String
    orderingProviderStreetTwo: String
    orderingProviderCity: String
    orderingProviderCounty: String
    orderingProviderState: String
    orderingProviderZipCode: String!
    orderingProviderPhone: String
    deviceTypes: [String]!
    defaultDevice: String!
  ): String
  addPatient(
    lookupId: String
    firstName: String!
    middleName: String
    lastName: String!
    suffix: String
    birthDate: String!
    street: String!
    streetTwo: String
    city: String
    state: String!
    zipCode: String!
    telephone: String!
    role: String
    email: String
    county: String
    race: String
    ethnicity: String
    gender: String
    residentCongregateSetting: Boolean!
    employedInHealthcare: Boolean!
  ): String
  updatePatient(
    patientId: String!
    lookupId: String
    firstName: String!
    middleName: String
    lastName: String!
    suffix: String
    birthDate: String!
    street: String!
    streetTwo: String
    city: String
    state: String!
    zipCode: String!
    telephone: String!
    role: String
    email: String
    county: String
    race: String
    ethnicity: String
    gender: String
    residentCongregateSetting: Boolean!
    employedInHealthcare: Boolean!
  ): String
  addTestResult(deviceId: String!, result: String!, patientId: String!): String
  addPatientToQueue(
    patientId: String!
    pregnancy: String
    symptoms: String
    firstTest: Boolean
    priorTestDate: String
    priorTestType: String
    priorTestResult: String
    symptomOnset: String
    noSymptoms: Boolean
  ): String
  removePatientFromQueue(patientId: String!): String
  clearQueue: Int
  updateTimeOfTestQuestions(
    patientId: String!
    pregnancy: String
    symptoms: String
    firstTest: Boolean
    priorTestDate: String
    priorTestType: String
    priorTestResult: String
    symptomOnset: String
    noSymptoms: Boolean
  ): String
}
